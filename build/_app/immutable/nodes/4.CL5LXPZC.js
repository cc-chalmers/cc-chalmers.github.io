import{i as u,c as b,s as e,o as m,a as v,t as h}from"../chunks/disclose-version.C0vqoXez.js";import{p as c,a as f}from"../chunks/runtime.DXWQE5jP.js";import{S as g,d as x}from"../chunks/strudel.C7_MkFpg.js";import{H}from"../chunks/Header.tepHQ9vT.js";var w=h(`<div><!> <h3 class="pagetitle svelte-1uad18p">PING PONG</h3> <div class="links svelte-1uad18p"></div> <div class="links examples svelte-1uad18p"></div> <div id="sound5"><p>5. Just for fun, here is a strudel-program using all of the techniques we
      learned at the "sound( )"-page. It contains 5 different examples which takes the previous example and adds something to it. To run each example, remove the <b>'//'</b> in front of each row of text.</p> <ol class="svelte-1uad18p"><li class="svelte-1uad18p">The first example plays 4 <b>B</b>ass<b>D</b>rums.</li> <li class="svelte-1uad18p">The second uses sub-patterns to play a <b>B</b>ass<b>D</b>rum 
          and a <b>S</b>nare<b>D</b>rum at the same time.</li> <li class="svelte-1uad18p">Adding <b>H</b>i<b>H</b>ats between the other drums from the above
          example.</li> <li class="svelte-1uad18p">Adding even more <b>H</b>i<b>H</b>ats, now using sub-patterns to 
          play at the same time as the <b>B</b>ass<b>D</b>rum <b>S</b>nare<b>D</b>rum.</li> <li class="svelte-1uad18p">This last example is the most complex, repeating some drums with the <b>'*'</b>, and even making sub-patterns WITHIN sub-patterns!</li></ol> <p>The possibilities are endless!</p></div> <!></div>`);function I(s,i){f(i,!1);const l=x.sound;u();var a=m(s,!0,w),t=v(a),r=e(e(t,!0)),d=e(e(r,!0)),o=e(e(d,!0)),p=e(e(o,!0)),n=e(e(p,!0));H(t,{}),g(n,{title:"sound()",get url(){return l[4]},height:800}),b(s,a),c()}export{I as component};
